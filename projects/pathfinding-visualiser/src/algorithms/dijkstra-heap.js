!function(a,b){"use strict";"function"==typeof define&&define.amd?define(["core","canvas-helper","map-node","dijkstra-common"],b):"object"==typeof exports&&(module.exports=b(require("../core"),require("../canvas-helper"),require("../map-node"),require("./dijkstra-common")))}(this,function(a,b,c,d){"use strict";function e(a){for(var b=0,c=Object.keys(a),d=0;d<c.length;d++)a[c[d]]<Number.MAX_VALUE&&b++;return b}var f={};return f.run=function(c,f,g){var h,i={},j=new g,k={},l=[],m=c.start.getHashKey();for(i[m]=0,j.insert(0,c.start);!j.isEmpty();){var n=j.extractMinimum(),o=n.value.getHashKey(),p=d.getNeighbourNodes(c,n.value,k);for(l.push({f:b.drawVisited,x:n.value.x,y:n.value.y}),h=0;h<p.length;h++){var q=p[h],r=q.getHashKey(),s=i[o]+q.g;if("undefined"==typeof k[r]&&("undefined"==typeof i[r]||s<i[r])){if(i[r]=s,q.parent=n.value,q.equals(c.goal)){var t=a.timeNow(),u=e(i),v=d.buildSummaryMessage(c,u);return void f(v,l,q,[],t)}"undefined"==typeof k[r]?j.insert(s,q):j.decreaseKey(k[r],s)}}}f([{result:"No path exists"}],l,void 0,void 0,a.timeNow())},f});