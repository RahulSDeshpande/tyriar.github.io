!function(a,b){"use strict";"function"==typeof define&&define.amd?define(["core","canvas-helper","map-node","a-star-common"],b):"object"==typeof exports&&(module.exports=b(require("../core"),require("../canvas-helper"),require("../map-node"),require("./a-star-common")))}(this,function(a,b,c,d){"use strict";function e(a,c,e,f,g,h){for(var i=0;i<a.length;i++){var j=a[i].getHashKey();if(!(j in f)){var k=e[j];k?a[i].g<k.g&&(k.g=a[i].g,k.parent=a[i].parent,c.decreaseKey(k,k.g+d.heuristic(k,g))):(a[i].f=a[i].g+d.heuristic(a[i],g),e[j]=c.insert(a[i].f,a[i]),h.push({f:b.drawOpenListNode,x:a[i].x,y:a[i].y}))}}}var f={};return f.run=function(c,f,g,h){var i={},j={},k=new g,l=c.start,m=c.goal,n=[];for(l.f=l.g+d.heuristic(l,m),j[l.getHashKey()]=k.insert(l.f,l);!k.isEmpty();){var o=k.extractMinimum();if(o.value.equals(m)){var p=a.timeNow(),q=d.buildSummaryMessage(c,k.size(),Object.keys(i).length);return void f(q,n,o.value,h(k),p)}var r=o.value.getHashKey();j[r]=void 0,i[r]=o,n.push({f:b.drawVisited,x:o.value.x,y:o.value.y});var s=d.getNeighbourNodes(c,o.value);e(s,k,j,i,m,n)}f([{result:"No path exists"}],n,void 0,void 0,a.timeNow())},f});