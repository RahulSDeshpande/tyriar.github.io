!function(a,b){"use strict";"function"==typeof define&&define.amd?define(["core","canvas-helper","binary-heap","map-node","a-star-common"],b):"object"==typeof exports?module.exports=b(require("./core"),require("./canvas-helper"),require("./binary-heap"),require("./map-node"),require("./a-star-common")):a.aStarBinaryHeap=b(core,canvasHelper,BinaryHeap,MapNode,aStarCommon)}(this,function(a,b,c,d,e){"use strict";function f(a,c,d,f,g,h){for(var i=0;i<a.length;i++){var j=a[i].x+","+a[i].y;if(!(j in f)){var k=d[j];k?a[i].g<k.g&&(k.g=a[i].g,k.parent=a[i].parent,c.decreaseKey(k,k.g+e.heuristic(k,g))):(a[i].f=a[i].g+e.heuristic(a[i],g),d[j]=c.insert(a[i].f,a[i]),h.push({f:b.drawOpenListNode,x:a[i].x,y:a[i].y}))}}}var g={};return g.run=function(a,d){var g={},h={},i=new c,j=a.start,k=a.goal,l=[];for(j.f=j.g+e.heuristic(j,k),h[j.x+","+j.y]=i.insert(j.f,j);!i.isEmpty();){var m=i.extractMinimum();if(m.value.equals(k)){for(var n=performance.now(),o=e.buildSummaryMessage(a,i.size(),Object.keys(g).length),p=i.list,q=0;q<p.length;q++)p[q]=p[q].value;return void d(o,l,m.value,p,n)}var r=m.value.x+","+m.value.y;h[r]=void 0,g[r]=m,l.push({f:b.drawVisited,x:m.value.x,y:m.value.y});var s=e.getNeighbourNodes(a,m.value);f(s,i,h,g,k,l)}d([{result:"No path exists"}],l,void 0,void 0,performance.now())},g});